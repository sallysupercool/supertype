{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/export/export-components.js","webpack://exports/./src/export/open-export-dialog.js","webpack://exports/./src/mixins-export.js","webpack://exports/./src/util/list.js","webpack://exports/./src/util/number.js","webpack://exports/./src/util/scss.js","webpack://exports/./src/util/sketch.js","webpack://exports/./src/util/string.js","webpack://exports/./src/util/ui.js"],"names":["context","opts","cb","ui","createSettingsDialog","exportComponents","data","cssUnit","textStyles","sketch","getTextStyles","openExportDialog","title","informativeText","stylesheet","forEach","textStyle","name","scss","createMixin","finalStylesList","list","createFinalStylesList","createMegaMixin","createSavePanel","namesArray","map","cleanedNames","str","replace","deDupedNames","Set","sort","sortTextStyles","a","b","number","parseFloatMaxDecimal","maxDecimalPlaces","Number","toFixed","createCssProps","cssProps","fontFamily","fontParts","split","fontWeightMap","fontSize","textTransform","lineHeight","createStyleBlock","ruleSet","prop","i","lastIndexOf","insert","index","value","substr","phone","tablet","desktop","texts","document","documentData","layerTextStyles","objects","rawTextStyles","text","push","attributes","style","rawTextStyle","string","slugify","stripSketchWords","String","NSFont","fontDescriptor","objectForKey","NSFontNameAttribute","NSFontSizeAttribute","paragraph","NSParagraphStyle","maximumLineHeight","marginBottom","paragraphSpacing","parseInt","MSAttributedStringTextTransformAttribute","toLowerCase","from","to","l","length","RegExp","charAt","stripMedias","defaultFileName","contents","save","NSSavePanel","savePanel","setNameFieldStringValue","setAllowsOtherFileTypes","setExtensionHidden","runModal","file","NSString","stringWithString","path","URL","writeToFile_atomically_encoding_error","NSUTF8StringEncoding","createLabel","label","NSTextField","alloc","init","setStringValue","setFont","boldSystemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","createTextField","field","createSelect","options","comboBox","NSPopUpButton","addItemsWithTitles","selectItemAtIndex","createStepper","stepper","NSStepper","createCheckbox","checkbox","NSButton","setButtonType","NSSwitchButton","components","cancelBtnText","confirmBtnText","dialog","NSAlert","dialogIconPath","plugin","urlForResourceNamed","dialogIcon","NSImage","initByReferencingFile","setIcon","setMessageText","setInformativeText","btnConfirm","addButtonWithTitle","btnCancel","gridView","NSGridView","inputs","height","rowSpacing","c","type","addRowWithViews","values","v","id","accessoryView","columnSpacing","frame","NSMakeRect","responseCode","stringValue","indexOfSelectedItem","state"],"mappings":";;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAe,gEAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDa,CAAf,E;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEe,yEAASA,OAAT,EAAkBC,IAAlB,EAAwBC,EAAxB,EAA4B;AAEzCC,kDAAE,CAACC,oBAAH,CAAwBJ,OAAxB,EAAiCC,IAAjC,EAAuCI,0DAAvC,EAAyD,UAACC,IAAD,EAAU;AAEjE;AACAA,QAAI,CAACC,OAAL,GAAgBD,IAAI,CAACC,OAAL,KAAiB,SAAjB,GAA6B,CAA7B,GAAiCD,IAAI,CAACC,OAAtD,CAHiE,CAKjE;;AACA,QAAIC,UAAU,GAAGC,oDAAM,CAACC,aAAP,CAAqBV,OAArB,CAAjB;AAEAE,MAAE,CAACM,UAAD,EAAaF,IAAb,CAAF;AACD,GATD;AAUD;AAAA,C;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEe,yEAASN,OAAT,EAAkB;AAE7BW,4EAAgB,CAACX,OAAD,EAAU;AACtBY,SAAK,EAAE,oBADe;AAEtBC,mBAAe,EAAE;AAFK,GAAV,EAGb,UAACL,UAAD,EAAaF,IAAb,EAAsB;AAErB,QAAIQ,UAAU,GAAG,uCAAjB,CAFqB,CAIrB;;AACAN,cAAU,CAACO,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC7BF,gBAAU,IACX,iBAAUE,SAAS,CAACC,IAApB,UAA+BC,kDAAI,CAACC,WAAL,CAAiBH,SAAjB,CAA/B,QADC;AAEF,KAHD;AAKAF,cAAU,IAAI,wDAAd;AAEA,QAAIM,eAAe,GAAGC,kDAAI,CAACC,qBAAL,CAA2Bd,UAA3B,CAAtB;AAEAY,mBAAe,CAACL,OAAhB,CAAwB,UAAAC,SAAS,EAAI;AACjCF,gBAAU,IAAII,kDAAI,CAACK,eAAL,CAAqBP,SAArB,CAAd;AACH,KAFD;AAIAb,oDAAE,CAACqB,eAAH,CAAmB,wBAAnB,EAA6CV,UAA7C;AACH,GAtBe,CAAhB;AAuBH;AAAA,C;;;;;;;;;;;;AC/BD;AAAA;AAAa;;;;;;;;;;AACb;AAEA,IAAMO,IAAI,GAAG;AACX;AACAC,uBAFW,iCAEWd,UAFX,EAEuB;AAChC;AACA,QAAIiB,UAAU,GAAGjB,UAAU,CAACkB,GAAX,CAAe,UAAAlB,UAAU;AAAA,aAAIA,UAAU,CAACS,IAAf;AAAA,KAAzB,CAAjB,CAFgC,CAIhC;;AACA,QAAIU,YAAY,GAAGF,UAAU,CAACC,GAAX,CAAe,UAASE,GAAT,EAAa;AAAE,aAAOA,GAAG,CAACC,OAAJ,CAAY,2BAAZ,EAAwC,EAAxC,CAAP;AAAoD,KAAlF,CAAnB;;AAEA,QAAIC,YAAY,sBAAO,IAAIC,GAAJ,CAAQJ,YAAR,CAAP,CAAhB;;AACAG,gBAAY,CAACE,IAAb;AAGA,WAAOF,YAAP;AACD,GAdU;AAeXG,gBAfW,0BAeIzB,UAfJ,EAegB;AAEzB;AACAA,cAAU,CAACwB,IAAX,CAAgB,UAACE,CAAD,EAAIC,CAAJ,EAAU;AACxB,aAAOD,CAAC,CAACjB,IAAF,GAASkB,CAAC,CAAClB,IAAlB;AACD,KAFD;AAIA,WAAOT,UAAP;AACD;AAvBU,CAAb;AA0Bea,mEAAf,E;;;;;;;;;;;;AC7BA;AAAa;;AAEb,IAAMe,MAAM,GAAG;AACbC,sBADa,gCACQD,MADR,EACgBE,gBADhB,EACkC;AAC7C,WAAOC,MAAM,CAACH,MAAM,CAACI,OAAP,CAAeF,gBAAf,EAAiCT,OAAjC,CAAyC,SAAzC,EAAoD,EAApD,CAAD,CAAb;AACD;AAHY,CAAf;AAMeO,qEAAf,E;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAa;;AAEb;AACA;AACA;AAEA,IAAMlB,IAAI,GAAG;AAET;AACA;AACAC,aAJS,uBAIGH,SAJH,EAIyB;AAAA,QAAXf,IAAW,uEAAJ,EAAI;;AAC9B,aAASwC,cAAT,CAAwBzB,SAAxB,EAA8C;AAAA,UAAXf,IAAW,uEAAJ,EAAI;AAE1CA,UAAI,CAACM,OAAL,GAAe,IAAf;AACAN,UAAI,CAACqC,gBAAL,GAAwB,CAAxB;AAEA,UAAII,QAAQ,GAAG,EAAf;AAEAA,cAAQ,CAAC,aAAD,CAAR,GAA0B1B,SAAS,CAAC2B,UAApC;AACAD,cAAQ,CAAC,aAAD,CAAR,GAA0B,GAA1B;AACAA,cAAQ,CAAC,gBAAD,CAAR,GAA6B,MAA7B,CAT0C,CAU1C;;AAEA,UAAIE,SAAS,GAAG5B,SAAS,CAAC2B,UAAV,CAAqBE,KAArB,CAA2B,GAA3B,CAAhB;AAEA,UAAIC,aAAa,GAAG;AAChB,gBAAQ,GADQ;AAEhB,iBAAS,GAFO;AAGhB,mBAAW,GAHK;AAIhB,kBAAU,GAJM;AAKhB,gBAAQ,GALQ;AAMhB,iBAAS;AANO,OAApB;;AASA,UAAIF,SAAS,CAAC,CAAD,CAAT,IAAgBE,aAAa,CAACF,SAAS,CAAC,CAAD,CAAV,CAAjC,EAAiD;AAC7CF,gBAAQ,CAAC,aAAD,CAAR,GAA0BE,SAAS,CAAC,CAAD,CAAnC;AACAF,gBAAQ,CAAC,aAAD,CAAR,GAA0BI,aAAa,CAACF,SAAS,CAAC,CAAD,CAAV,CAAvC;AACH;;AAEDF,cAAQ,CAAC,WAAD,CAAR,GAAwBN,+CAAM,CAACC,oBAAP,CAA4B,IAAIrB,SAAS,CAAC+B,QAA1C,EAAoD,CAApD,IAAyD9C,IAAI,CAACM,OAAtF;;AAEA,UAAIS,SAAS,CAACgC,aAAV,KAA4B,CAAhC,EAAmC;AAC/BN,gBAAQ,CAAC,gBAAD,CAAR,GAA6B,WAA7B;AACH;;AAED,UAAI1B,SAAS,CAACgC,aAAV,KAA4B,CAAhC,EAAmC;AAC/BN,gBAAQ,CAAC,gBAAD,CAAR,GAA6B,WAA7B;AACH,OApCyC,CAqC1C;;;AACA,UAAI1B,SAAS,CAACiC,UAAd,EAA0B;AACtBP,gBAAQ,CAAC,aAAD,CAAR,GAA0BN,+CAAM,CAACC,oBAAP,CAA4BrB,SAAS,CAACiC,UAAV,GAAuBjC,SAAS,CAAC+B,QAA7D,EAAuE9C,IAAI,CAACqC,gBAA5E,CAA1B;AACH,OAxCyC,CAyC1C;AACA;AACA;AACA;AACA;;;AAEA,aAAOI,QAAP;AACH;;AAAA;;AAED,aAASQ,gBAAT,CAA0BR,QAA1B,EAAoC;AAEhC,UAAIS,OAAO,GAAG,EAAd;;AAEA,WAAK,IAAIC,IAAT,IAAiBV,QAAjB,EAA2B;AACvBS,eAAO,IAAI,OAAOC,IAAP,GAAc,IAAd,GAAqBV,QAAQ,CAACU,IAAD,CAA7B,GAAsC,GAAtC,GAA4C,IAAvD;AACH,OAN+B,CAOhC;;;AAEA,aAAOD,OAAP;AACH;;AAAA,KA7D6B,CA+D9B;;AACAnC,aAAS,GAAGyB,cAAc,CAACzB,SAAD,CAA1B,CAhE8B,CAiE9B;;AACAA,aAAS,GAAGkC,gBAAgB,CAAClC,SAAD,CAA5B;AAEA,WAAOA,SAAP;AACH,GAzEQ;AA0ETO,iBA1ES,2BA0EOP,SA1EP,EA0EkB;AACvB;AACA,QAAIqC,CAAC,GAAGrC,SAAS,CAACsC,WAAV,CAAsB,GAAtB,CAAR;;AAEA,aAASC,MAAT,CAAgB3B,GAAhB,EAAqB4B,KAArB,EAA4BC,KAA5B,EAAmC;AAC/B,aAAO7B,GAAG,CAAC8B,MAAJ,CAAW,CAAX,EAAcF,KAAd,IAAuBC,KAAvB,GAA+B7B,GAAG,CAAC8B,MAAJ,CAAWF,KAAX,CAAtC;AACH;;AACD,QAAIG,KAAK,GAAGJ,MAAM,CAACvC,SAAD,EAAYqC,CAAZ,EAAe,SAAf,CAAlB;AACA,QAAIO,MAAM,GAAGL,MAAM,CAACvC,SAAD,EAAYqC,CAAZ,EAAe,SAAf,CAAnB;AACA,QAAIQ,OAAO,GAAGN,MAAM,CAACvC,SAAD,EAAYqC,CAAZ,EAAe,UAAf,CAApB;AAEA,4BAAiBrC,SAAjB,8DACqC4C,MADrC,kEAEyCC,OAFzC,6DAGoCF,KAHpC;AAKH;AA1FQ,CAAb;AA6FezC,mEAAf,E;;;;;;;;;;;;ACnGA;AAAA;AAAa;;CAEb;AACA;;AAEA,IAAMT,MAAM,GAAG;AACbC,eADa,yBACCV,OADD,EACU;AAErB,QAAI8D,KAAK,GAAG9D,OAAO,CAAC+D,QAAR,CAAiBC,YAAjB,GAAgCC,eAAhC,GAAkDC,OAAlD,EAAZ;AACA,QAAIC,aAAa,GAAG,EAApB;AAEAL,SAAK,CAAC/C,OAAN,CAAc,UAACqD,IAAD,EAAOf,CAAP,EAAa;AAEzBc,mBAAa,CAACE,IAAd,CAAmB;AACjBC,kBAAU,EAAEF,IAAI,CAACG,KAAL,GAAavD,SAAb,GAAyBsD,UAAzB,EADK;AAEjBtD,iBAAS,EAAEoD,IAFM;AAGjBnD,YAAI,EAAEmD,IAAI,CAACnD,IAAL;AAHW,OAAnB;AAKD,KAPD;AASA,QAAIT,UAAU,GAAG,EAAjB;AAEA2D,iBAAa,CAACpD,OAAd,CAAsB,UAAAyD,YAAY,EAAI;AAEpC,UAAIxD,SAAS,GAAG,EAAhB;AAEAA,eAAS,CAACC,IAAV,GAAiBwD,+CAAM,CAACC,OAAP,CAAeF,YAAY,CAACvD,IAA5B,CAAjB;AACAD,eAAS,CAACC,IAAV,GAAiBwD,+CAAM,CAACE,gBAAP,CAAwB3D,SAAS,CAACC,IAAlC,CAAjB;AAEAD,eAAS,CAAC2B,UAAV,GAAuBiC,MAAM,CAACJ,YAAY,CAACF,UAAb,CAAwBO,MAAxB,CAA+BC,cAA/B,GAAgDC,YAAhD,CAA6DC,mBAA7D,CAAD,CAA7B;AACAhE,eAAS,CAAC+B,QAAV,GAAqByB,YAAY,CAACF,UAAb,CAAwBO,MAAxB,CAA+BC,cAA/B,GAAgDC,YAAhD,CAA6DE,mBAA7D,CAArB;AACAjE,eAAS,CAACkE,SAAV,GAAsBV,YAAY,CAACF,UAAb,CAAwBa,gBAA9C;;AAEA,UAAInE,SAAS,CAACkE,SAAd,EAAyB;AACvBlE,iBAAS,CAACiC,UAAV,GAAuBjC,SAAS,CAACkE,SAAV,CAAoBE,iBAApB,EAAvB;AACApE,iBAAS,CAACqE,YAAV,GAAyBrE,SAAS,CAACkE,SAAV,CAAoBI,gBAApB,EAAzB;AACD,OAdmC,CAgBpC;;;AACAtE,eAAS,CAACgC,aAAV,GAA0BuC,QAAQ,CAACf,YAAY,CAACF,UAAb,CAAwBkB,wCAAxB,IAAoE,CAArE,CAAlC;AAEAhF,gBAAU,CAAC6D,IAAX,CAAgBrD,SAAhB;AACD,KApBD;AAsBA,WAAOR,UAAP;AACD;AAxCY,CAAf;AA2CeC,qEAAf,E;;;;;;;;;;;;AChDA;CAEA;AACA;;AAEA,IAAMgE,MAAM,GAAG;AACbC,SADa,mBACL9C,GADK,EACA;AAEXA,OAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAN,CAFW,CAE0B;;AACrCD,OAAG,GAAGA,GAAG,CAAC6D,WAAJ,EAAN,CAHW,CAKX;;AACA,QAAIC,IAAI,GAAG,8BAAX;AACA,QAAIC,EAAE,GAAK,8BAAX;;AAEA,SAAK,IAAItC,CAAC,GAAG,CAAR,EAAWuC,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCxC,CAAC,GAAGuC,CAArC,EAAwCvC,CAAC,EAAzC,EAA6C;AAC3CzB,SAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,IAAIiE,MAAJ,CAAWJ,IAAI,CAACK,MAAL,CAAY1C,CAAZ,CAAX,EAA2B,GAA3B,CAAZ,EAA6CsC,EAAE,CAACI,MAAH,CAAU1C,CAAV,CAA7C,CAAN;AACD;;AAEDzB,OAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,EAAgC;AAAhC,KACHA,OADG,CACK,MADL,EACa,GADb,EACkB;AADlB,KAEHA,OAFG,CAEK,KAFL,EAEY,GAFZ,CAAN,CAEuB;AAFvB;AAKAD,OAAG,GAAG,WAAWA,GAAjB,CAlBW,CAkBW;;AAEtB,WAAOA,GAAP;AACD,GAtBY;AAuBZ;AACD+C,kBAxBa,4BAwBI/C,GAxBJ,EAwBS;AAChBA,OAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,yHAAZ,EAAuI,EAAvI,CAAN;AACA,WAAOD,GAAP;AAEL,GA5BY;AA6Bb;AACAoE,aA9Ba,uBA8BDpE,GA9BC,EA8BI;AACfA,OAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,2BAAZ,EAAyC,EAAzC,CAAN;AACA,WAAOD,GAAP;AACD;AAjCY,CAAf;AAoCe6C,qEAAf,E;;;;;;;;;;;;ACzCA;AAAa;;AAEb,IAAMtE,EAAE,GAAG;AACTqB,iBADS,2BACOyE,eADP,EACwBC,QADxB,EACkC;AAEzC,QAAIC,IAAI,GAAGC,WAAW,CAACC,SAAZ,EAAX;AAEAF,QAAI,CAACG,uBAAL,CAA6BL,eAA7B;AACAE,QAAI,CAACI,uBAAL,CAA6B,KAA7B;AACAJ,QAAI,CAACK,kBAAL,CAAwB,KAAxB;;AAEA,QAAIL,IAAI,CAACM,QAAL,EAAJ,EAAqB;AAEnB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0BV,QAA1B,CAAX;AACA,UAAIW,IAAI,GAAGV,IAAI,CAACW,GAAL,GAAWD,IAAX,EAAX;AAEAH,UAAI,CAACK,qCAAL,CAA2CF,IAA3C,EAAiD,IAAjD,EAAuDG,oBAAvD,EAA6E,IAA7E;AACD;AACF,GAhBQ;AAiBTC,aAAW,EAAE,uBAAe;AAAA,QAAd7C,IAAc,uEAAP,EAAO;AAE1B,QAAI8C,KAAK,GAAGC,WAAW,CAACC,KAAZ,GAAoBC,IAApB,EAAZ;AAEAH,SAAK,CAACI,cAAN,CAAqBlD,IAArB;AACA8C,SAAK,CAACK,OAAN,CAAc1C,MAAM,CAAC2C,oBAAP,CAA4B,EAA5B,CAAd;AACAN,SAAK,CAACO,UAAN,CAAiB,KAAjB;AACAP,SAAK,CAACQ,kBAAN,CAAyB,KAAzB;AACAR,SAAK,CAACS,WAAN,CAAkB,KAAlB;AACAT,SAAK,CAACU,aAAN,CAAoB,KAApB;AAEA,WAAOV,KAAP;AACD,GA7BQ;AA8BTW,iBA9BS,2BA8BOpE,KA9BP,EA8Bc;AAErB,QAAIqE,KAAK,GAAGX,WAAW,CAACC,KAAZ,GAAoBC,IAApB,EAAZ;AAEAS,SAAK,CAACR,cAAN,CAAqB7D,KAArB;AAEA,WAAOqE,KAAP;AACD,GArCQ;AAsCTC,cAAY,EAAE,sBAACC,OAAD,EAAa;AAEzB,QAAIC,QAAQ,GAAGC,aAAa,CAACd,KAAd,GAAsBC,IAAtB,EAAf;AAEAY,YAAQ,CAACE,kBAAT,CAA4BH,OAA5B;AACAC,YAAQ,CAACG,iBAAT,CAA2B,CAA3B;AAEA,WAAOH,QAAP;AACD,GA9CQ;AA+CTI,eAAa,EAAE,uBAAC5E,KAAD,EAAW;AAExB,QAAI6E,OAAO,GAAGC,SAAS,CAACnB,KAAV,GAAkBC,IAAlB,EAAd;AACA,WAAOiB,OAAP;AACD,GAnDQ;AAoDTE,gBAAc,EAAE,wBAAC5H,KAAD,EAAW;AAEzB,QAAI6H,QAAQ,GAAGC,QAAQ,CAACtB,KAAT,GAAiBC,IAAjB,EAAf;AACAoB,YAAQ,CAACE,aAAT,CAAuBC,cAAvB;AACAH,YAAQ,CAAC7H,KAAT,GAAiBA,KAAjB;AACA,WAAO6H,QAAP;AACD,GA1DQ;AA2DTrI,sBA3DS,gCA2DYJ,OA3DZ,EA2DgD;AAAA,QAA3BC,IAA2B,uEAApB,EAAoB;AAAA,QAAhB4I,UAAgB;AAAA,QAAJ3I,EAAI;AAEvDD,QAAI,CAACW,KAAL,GAAaX,IAAI,CAACW,KAAL,IAAc,OAA3B;AACAX,QAAI,CAACY,eAAL,GAAuBZ,IAAI,CAACY,eAAL,IAAwB,EAA/C;AACAZ,QAAI,CAAC6I,aAAL,GAAqB7I,IAAI,CAAC6I,aAAL,IAAsB,QAA3C;AACA7I,QAAI,CAAC8I,cAAL,GAAsB9I,IAAI,CAAC8I,cAAL,IAAuB,IAA7C;AAEA,QAAIC,MAAM,GAAGC,OAAO,CAAC7B,KAAR,GAAgBC,IAAhB,EAAb;AACA,QAAI6B,cAAc,GAAGlJ,OAAO,CAACmJ,MAAR,CAAeC,mBAAf,CAAmC,UAAnC,EAA+CvC,IAA/C,EAArB;AACA,QAAIwC,UAAU,GAAGC,OAAO,CAAClC,KAAR,GAAgBmC,qBAAhB,CAAsCL,cAAtC,CAAjB;AAEAF,UAAM,CAACQ,OAAP,CAAeH,UAAf;AACAL,UAAM,CAACS,cAAP,CAAsBxJ,IAAI,CAACW,KAA3B;AACAoI,UAAM,CAACU,kBAAP,CAA0BzJ,IAAI,CAACY,eAA/B;AAEA,QAAI8I,UAAU,GAAGX,MAAM,CAACY,kBAAP,CAA0B3J,IAAI,CAAC8I,cAA/B,CAAjB;AACA,QAAIc,SAAS,GAAGb,MAAM,CAACY,kBAAP,CAA0B3J,IAAI,CAAC6I,aAA/B,CAAhB,CAhBuD,CAkBvD;;AACA,QAAIgB,QAAQ,GAAGC,UAAU,CAAC3C,KAAX,GAAmBC,IAAnB,EAAf,CAnBuD,CAqBvD;;AACA,QAAI2C,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AAEA,QAAIC,UAAU,GAAG,CAAjB,CAzBuD,CA2BvD;;AACArB,cAAU,CAAC9H,OAAX,CAAmB,UAAAoJ,CAAC,EAAI;AAEtB,UAAIjD,KAAJ,EAAWY,KAAX;;AAEA,cAAQqC,CAAC,CAACC,IAAV;AAEE,aAAK,MAAL;AAEElD,eAAK,GAAG/G,EAAE,CAAC8G,WAAH,CAAekD,CAAC,CAACjD,KAAjB,CAAR;AACAY,eAAK,GAAG3H,EAAE,CAAC0H,eAAH,CAAmBsC,CAAC,CAAC1G,KAArB,CAAR;AACAwG,gBAAM,IAAI,KAAKC,UAAf;AACAJ,kBAAQ,CAACO,eAAT,CAAyB,CAACnD,KAAD,EAAQY,KAAR,CAAzB;AAEA;;AAEF,aAAK,SAAL;AAEEZ,eAAK,GAAG/G,EAAE,CAAC8G,WAAH,CAAekD,CAAC,CAACjD,KAAjB,CAAR;AACAY,eAAK,GAAG3H,EAAE,CAACkI,aAAH,CAAiB8B,CAAC,CAAC1G,KAAnB,CAAR;AACAwG,gBAAM,IAAI,KAAKC,UAAf;AACAJ,kBAAQ,CAACO,eAAT,CAAyB,CAACnD,KAAD,EAAQY,KAAR,CAAzB;AAEA;;AAEF,aAAK,UAAL;AAEEZ,eAAK,GAAG/G,EAAE,CAAC8G,WAAH,CAAekD,CAAC,CAACjD,KAAjB,CAAR;AACAY,eAAK,GAAG3H,EAAE,CAACqI,cAAH,CAAkB2B,CAAC,CAAC1G,KAApB,CAAR;AACAwG,gBAAM,IAAI,KAAKC,UAAf;AACAJ,kBAAQ,CAACO,eAAT,CAAyB,CAACnD,KAAD,EAAQY,KAAR,CAAzB;AAEA;;AAEF,aAAK,eAAL;AAEEA,eAAK,GAAG,EAAR;AAEAqC,WAAC,CAACG,MAAF,CAASvJ,OAAT,CAAiB,UAACwJ,CAAD,EAAIlH,CAAJ,EAAU;AAEzB6D,iBAAK,GAAI7D,CAAC,GAAGlD,EAAE,CAAC8G,WAAH,EAAH,GAAsB9G,EAAE,CAAC8G,WAAH,CAAekD,CAAC,CAACjD,KAAjB,CAAhC;AAEA,gBAAIuB,QAAQ,GAAGtI,EAAE,CAACqI,cAAH,CAAkB+B,CAAlB,CAAf;AACAN,kBAAM,IAAI,KAAKC,UAAf;AAEApC,iBAAK,CAACzD,IAAN,CAAWoE,QAAX;AACAqB,oBAAQ,CAACO,eAAT,CAAyB,CAACnD,KAAD,EAAQuB,QAAR,CAAzB;AACD,WATD;AAWA;;AAEF,aAAK,QAAL;AAEEvB,eAAK,GAAG/G,EAAE,CAAC8G,WAAH,CAAekD,CAAC,CAACjD,KAAjB,CAAR;AACAY,eAAK,GAAG3H,EAAE,CAAC4H,YAAH,CAAgBoC,CAAC,CAACnC,OAAlB,CAAR;AACAiC,gBAAM,IAAI,KAAKC,UAAf;AACAJ,kBAAQ,CAACO,eAAT,CAAyB,CAACnD,KAAD,EAAQY,KAAR,CAAzB;AAEA;AArDJ;;AAwDAkC,YAAM,CAACG,CAAC,CAACK,EAAH,CAAN,GAAe1C,KAAf;AACD,KA7DD,EA5BuD,CA2FvD;;AACAkB,UAAM,CAACyB,aAAP,GAAuBX,QAAvB;AAEAA,YAAQ,CAACY,aAAT,GAAyB,EAAzB;AACAZ,YAAQ,CAACI,UAAT,GAAsBA,UAAtB;AACAJ,YAAQ,CAACa,KAAT,GAAiBC,UAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAYX,MAAZ,CAA3B,CAhGuD,CAkGvD;;AACA,QAAIY,YAAY,GAAG7B,MAAM,CAACvC,QAAP,EAAnB,CAnGuD,CAqGvD;;AACA,QAAIoE,YAAY,KAAK,IAArB,EAA2B;AAEzB,UAAIvK,IAAI,GAAG,EAAX;AAEAuI,gBAAU,CAAC9H,OAAX,CAAmB,UAAAoJ,CAAC,EAAI;AAEtB,gBAAQA,CAAC,CAACC,IAAV;AACE,eAAK,MAAL;AACE9J,gBAAI,CAAC6J,CAAC,CAACK,EAAH,CAAJ,GAAaR,MAAM,CAACG,CAAC,CAACK,EAAH,CAAN,CAAaM,WAAb,EAAb;AACA;;AACF,eAAK,QAAL;AACExK,gBAAI,CAAC6J,CAAC,CAACK,EAAH,CAAJ,GAAaL,CAAC,CAACnC,OAAF,CAAUgC,MAAM,CAACG,CAAC,CAACK,EAAH,CAAN,CAAaO,mBAAb,EAAV,CAAb;AACA;;AACF,eAAK,UAAL;AACEzK,gBAAI,CAAC6J,CAAC,CAACK,EAAH,CAAJ,GAAcR,MAAM,CAACG,CAAC,CAACK,EAAH,CAAN,CAAaQ,KAAb,OAAyB,CAAvC;AACA;;AAEF,eAAK,eAAL;AACE,gBAAIV,MAAM,GAAG,EAAb;AAEAH,aAAC,CAACG,MAAF,CAASvJ,OAAT,CAAiB,UAACwJ,CAAD,EAAIlH,CAAJ,EAAU;AACzBiH,oBAAM,CAACC,CAAD,CAAN,GAAcP,MAAM,CAACG,CAAC,CAACK,EAAH,CAAN,CAAanH,CAAb,EAAgB2H,KAAhB,OAA4B,CAA1C;AACD,aAFD;AAIA1K,gBAAI,CAAC6J,CAAC,CAACK,EAAH,CAAJ,GAAaF,MAAb;AAlBJ;AAoBD,OAtBD;AAwBApK,QAAE,CAACI,IAAD,CAAF;AACA;AACD;;AAED,WAAO0I,MAAP;AACD;AAlMQ,CAAX;AAqMe7I,iEAAf,E","file":"mixins-export.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/mixins-export.js\");\n","export default [\n  \n  // {\n  //   type: 'multicheckbox',\n  //   id: 'excludeProps',\n  //   label: 'Exclude properties',\n  //   values: [\n  //     'Color',\n  //     'Letter spacing', \n  //     'Text transform', // swap for our removes\n  //   ]\n  // },\n  // {\n  //   type: 'select', //removed as we do this in PostCSS\n  //   id: 'cssUnit',\n  //   options: [\n  //     'px',\n  //     'em',\n  //     'rem',\n  //     '%',\n  //     'vh',\n  //     'vw',\n  //     'No unit'\n  //   ],\n  //   label: 'CSS unit'\n  // },\n  // {\n  //   type: 'text', //removed as this is not rel for us\n  //   id: 'scalingFactor',\n  //   value: 1,\n  //   label: 'Size scaling factor'\n  // },\n  // {\n  //   type: 'text',\n  //   id: 'maxDecimalPlaces',\n  //   value: 6, // increased to 6 for accuracy\n  //   label: 'Maximal decimal places'\n  // },\n  // {\n  //   type: 'text',\n  //   id: 'namingPrefix',\n  //   value: 'text-', // changed to our prefix\n  //   label: 'Naming prefix'\n  // },\n  // {\n  //   type: 'select',\n  //   id: 'namingConvention',\n  //   options: [\n  //     'Text style name', // prefer our convention\n  //     'Numeric'\n  //   ],\n  //   label: 'Naming convention'\n  // }\n];","import ui from '../util/ui';\nimport sketch from '../util/sketch';\nimport exportComponents from './export-components';\n\nexport default function(context, opts, cb) {\n\n  ui.createSettingsDialog(context, opts, exportComponents, (data) => {\n\n    // Defaults\n    data.cssUnit = (data.cssUnit === 'No unit' ? 0 : data.cssUnit);\n\n    // Get the text styles from the Sketch document\n    let textStyles = sketch.getTextStyles(context);  \n\n    cb(textStyles, data);\n  });\n};","import ui from './util/ui';\nimport list from './util/list';\nimport sketch from './util/sketch';\nimport scss from './util/scss';\nimport openExportDialog from './export/open-export-dialog';\n\nexport default function(context) {\n\n    openExportDialog(context, {\n        title: 'SASS mixins export',\n        informativeText: 'Export all mixins and combined styles. Place this file in web/pattern-lab/source/styles/02-Mixins-and-Models/Mixins/'\n    }, (textStyles, data) => {\n\n        let stylesheet = '//export all text styles as mixins \\n';\n\n        // stuff these in the stylesheet\n        textStyles.forEach(textStyle => {\n           stylesheet += \n          `@mixin ${textStyle.name} {` + scss.createMixin(textStyle) + `}\\n`\n        });\n\n        stylesheet += '// now create combination mixins with media queries \\n';\n\n        let finalStylesList = list.createFinalStylesList(textStyles);\n\n        finalStylesList.forEach(textStyle => {\n            stylesheet += scss.createMegaMixin(textStyle);\n        });\n\n        ui.createSavePanel('_supertype-mixins.scss', stylesheet);\n    });\n};","\"use strict\";\nimport string from './string';\n\nconst list = {\n  // make a list of final text styles to drive creation of classes and mega mixins\n  createFinalStylesList(textStyles) {\n    //make array, strip out the media names, and dedupe (there will be 3 of each)\n    let namesArray = textStyles.map(textStyles => textStyles.name);\n  \n    //strip out the media sizes -- update this as necessary\n    let cleanedNames = namesArray.map(function(str){ return str.replace(/-mobile|-tablet|-desktop/g,\"\") });\n    \n    let deDupedNames = [...new Set(cleanedNames)];\n    deDupedNames.sort();\n\n\n    return deDupedNames;    \n  },\n  sortTextStyles(textStyles) {\n\n    // Sort text styles by name\n    textStyles.sort((a, b) => {\n      return a.name - b.name;\n    });\n\n    return textStyles;\n  }\n};\n\nexport default list;","\"use strict\";\n\nconst number = {\n  parseFloatMaxDecimal(number, maxDecimalPlaces) {\n    return Number(number.toFixed(maxDecimalPlaces).replace(/[.,]00$/, ''));\n  }\n};\n\nexport default number;","\"use strict\";\n\nimport list from './list';\nimport number from './number';\nimport string from './string';\n\nconst scss = {\n\n    //start creating things!\n    // this creates the initial css mixins from the Sketch properties\n    createMixin(textStyle, opts = {}) {\n        function createCssProps(textStyle, opts = {}) {\n\n            opts.cssUnit = 'px';\n            opts.maxDecimalPlaces = 6;\n\n            let cssProps = {};\n\n            cssProps['font-family'] = textStyle.fontFamily;\n            cssProps['font-weight'] = 400;\n            cssProps['text-transform'] = 'none';\n            // cssProps['margin-bottom'] = '$b';\n\n            let fontParts = textStyle.fontFamily.split('-');\n\n            let fontWeightMap = {\n                'Thin': 100,\n                'Light': 300,\n                'Regular': 400,\n                'Medium': 500,\n                'Bold': 700,\n                'Black': 900\n            };\n\n            if (fontParts[1] && fontWeightMap[fontParts[1]]) {\n                cssProps['font-family'] = fontParts[0];\n                cssProps['font-weight'] = fontWeightMap[fontParts[1]];\n            }\n\n            cssProps['font-size'] = number.parseFloatMaxDecimal(1 * textStyle.fontSize, 0) + opts.cssUnit;\n\n            if (textStyle.textTransform === 1) {\n                cssProps['text-transform'] = 'uppercase';\n            }\n\n            if (textStyle.textTransform === 2) {\n                cssProps['text-transform'] = 'lowercase';\n            }\n            // modified this line height calculator as it was outputting wrong sizes\n            if (textStyle.lineHeight) {\n                cssProps['line-height'] = number.parseFloatMaxDecimal(textStyle.lineHeight / textStyle.fontSize, opts.maxDecimalPlaces);\n            }\n            // huh, maybe we should grab margin bottoms?\n            // if (textStyle.marginBottom) {\n            //     cssProps['margin-bottom'] = number.parseFloatMaxDecimal(1 * textStyle.marginBottom, 0) + opts.cssUnit;\n            // }\n            // log('props ' + cssProps);\n\n            return cssProps;\n        };\n\n        function createStyleBlock(cssProps) {\n\n            let ruleSet = '';\n\n            for (let prop in cssProps) {\n                ruleSet += \"\\t\" + prop + ': ' + cssProps[prop] + ';' + \"\\n\";\n            }\n            // log('ruleSet' + ruleSet);\n\n            return ruleSet;\n        };\n\n        // first get properties\n        textStyle = createCssProps(textStyle);\n        // then create styles\n        textStyle = createStyleBlock(textStyle);\n\n        return textStyle;\n    },\n    createMegaMixin(textStyle) {\n        // swap in the screen size as second to last name\n        let i = textStyle.lastIndexOf('-');\n\n        function insert(str, index, value) {\n            return str.substr(0, index) + value + str.substr(index);\n        }\n        let phone = insert(textStyle, i, '-mobile');\n        let tablet = insert(textStyle, i, '-tablet');\n        let desktop = insert(textStyle, i, '-desktop');\n\n        return `@mixin ${textStyle} {\\n\n        @include media($tablet) { @include ${tablet} }\\n\n        @include media($tablet--gt) { @include ${desktop} }\\n\n        @include media($phone) { @include ${phone} }\\n  \n        }\\n`\n    }\n};\n\nexport default scss;","\"use strict\";\nimport string from './string';\n//here we grab all the properties from sketch and change the name, retaining media tags for now\n// this is called by ./export/open-export-dialog\n\nconst sketch = {\n  getTextStyles(context) {\n\n    let texts = context.document.documentData().layerTextStyles().objects();\n    let rawTextStyles = [];\n\n    texts.forEach((text, i) => {\n\n      rawTextStyles.push({\n        attributes: text.style().textStyle().attributes(),\n        textStyle: text,\n        name: text.name()\n      });\n    });\n\n    let textStyles = [];\n\n    rawTextStyles.forEach(rawTextStyle => {\n\n      let textStyle = {};\n\n      textStyle.name = string.slugify(rawTextStyle.name);\n      textStyle.name = string.stripSketchWords(textStyle.name);\n\n      textStyle.fontFamily = String(rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontNameAttribute));\n      textStyle.fontSize = rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute);\n      textStyle.paragraph = rawTextStyle.attributes.NSParagraphStyle;\n\n      if (textStyle.paragraph) {\n        textStyle.lineHeight = textStyle.paragraph.maximumLineHeight();\n        textStyle.marginBottom = textStyle.paragraph.paragraphSpacing();\n      }\n\n      // textStyle.letterSpacing = rawTextStyle.attributes.NSKern || 0;\n      textStyle.textTransform = parseInt(rawTextStyle.attributes.MSAttributedStringTextTransformAttribute || 0);\n\n      textStyles.push(textStyle);\n    });\n\n    return textStyles;\n  }\n};\n\nexport default sketch;","\"use strict\";\n\n// here we manipulate the name of the text style going from something like\n// Large/ Tablet/ Regular / Brand / Left =>  text--large-tablet-regular\n\nconst string = {\n  slugify(str) {\n\n    str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n    str = str.toLowerCase();\n\n    // remove accents, swap ñ for n, etc\n    let from = 'àáäâèéëêìíïîòóöôùúüûñç·/_,:;';\n    let to   = 'aaaaeeeeiiiioooouuuunc------';\n\n    for (let i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n    }\n\n    str = str.replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n      .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n      .replace(/-+/g, '-') // collapse dashes\n    ;\n\n    str = 'text--' + str; // add prefix\n\n    return str;\n  },\n   // strip Sketch parts from name ADD IN ANY MORE HERE-- TODO make this a UI \n  stripSketchWords(str) {\n        str = str.replace(/-left|-right|-centre|-light-grey|-black|-white|-series|-event|-brand|brand-1|brand-2|brand-3|brand-4|brand-5|-variable/g, '');\n        return str;\n                \n  },\n  // clean off media names, not for sass mixins export, only for other options!\n  stripMedias(str) {\n    str = str.replace(/-desktop|-mobile|-tablet/g, '');\n    return str;\n  }\n};\n\nexport default string;","\"use strict\";\n\nconst ui = {\n  createSavePanel(defaultFileName, contents) {\n\n    let save = NSSavePanel.savePanel();\n\n    save.setNameFieldStringValue(defaultFileName);\n    save.setAllowsOtherFileTypes(false);\n    save.setExtensionHidden(false);\n\n    if (save.runModal()) {\n\n      let file = NSString.stringWithString(contents);\n      let path = save.URL().path();\n\n      file.writeToFile_atomically_encoding_error(path, true, NSUTF8StringEncoding, null);\n    }\n  },\n  createLabel: (text = '') => {\n\n    let label = NSTextField.alloc().init();\n\n    label.setStringValue(text);\n    label.setFont(NSFont.boldSystemFontOfSize(12));\n    label.setBezeled(false);\n    label.setDrawsBackground(false);\n    label.setEditable(false);\n    label.setSelectable(false);\n\n    return label;\n  },\n  createTextField(value) {\n\n    let field = NSTextField.alloc().init();\n\n    field.setStringValue(value);\n\n    return field;\n  },\n  createSelect: (options) => {\n\n    let comboBox = NSPopUpButton.alloc().init();\n\n    comboBox.addItemsWithTitles(options);\n    comboBox.selectItemAtIndex(0);\n\n    return comboBox;\n  },\n  createStepper: (value) => {\n\n    let stepper = NSStepper.alloc().init();\n    return stepper;\n  },\n  createCheckbox: (title) => {\n\n    let checkbox = NSButton.alloc().init();\n    checkbox.setButtonType(NSSwitchButton);\n    checkbox.title = title;\n    return checkbox;\n  },\n  createSettingsDialog(context, opts = {}, components, cb) {\n\n    opts.title = opts.title || 'Alert';\n    opts.informativeText = opts.informativeText || '';\n    opts.cancelBtnText = opts.cancelBtnText || 'Cancel';\n    opts.confirmBtnText = opts.confirmBtnText || 'Ok';\n\n    let dialog = NSAlert.alloc().init();\n    let dialogIconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let dialogIcon = NSImage.alloc().initByReferencingFile(dialogIconPath);\n\n    dialog.setIcon(dialogIcon);\n    dialog.setMessageText(opts.title);\n    dialog.setInformativeText(opts.informativeText);\n\n    let btnConfirm = dialog.addButtonWithTitle(opts.confirmBtnText);\n    let btnCancel = dialog.addButtonWithTitle(opts.cancelBtnText);\n\n    // Create grid view\n    let gridView = NSGridView.alloc().init();\n\n    // Create object to hold all inputs\n    let inputs = {};\n    let height = 0;\n\n    let rowSpacing = 8;\n\n    // Loop each component\n    components.forEach(c => {\n\n      let label, field;\n\n      switch (c.type) {\n\n        case 'text':\n\n          label = ui.createLabel(c.label);\n          field = ui.createTextField(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'stepper':\n\n          label = ui.createLabel(c.label);\n          field = ui.createStepper(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'checkbox':\n\n          label = ui.createLabel(c.label);\n          field = ui.createCheckbox(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'multicheckbox':\n\n          field = [];\n\n          c.values.forEach((v, i) => {\n\n            label = (i ? ui.createLabel() : ui.createLabel(c.label));\n\n            let checkbox = ui.createCheckbox(v);\n            height += 22 + rowSpacing;\n\n            field.push(checkbox);\n            gridView.addRowWithViews([label, checkbox]);\n          });\n\n          break;\n\n        case 'select':\n\n          label = ui.createLabel(c.label);\n          field = ui.createSelect(c.options);\n          height += 28 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n      }\n\n      inputs[c.id] = field;\n    });\n\n    // Set grid view as view of dialog\n    dialog.accessoryView = gridView;\n\n    gridView.columnSpacing = 30;\n    gridView.rowSpacing = rowSpacing;\n    gridView.frame = NSMakeRect(0, 0, 400, height);\n\n    // Open the dialog and store the response code\n    let responseCode = dialog.runModal();\n\n    // The dialog is being 'submitted'\n    if (responseCode === 1000) {\n\n      let data = {};\n\n      components.forEach(c => {\n\n        switch (c.type) {\n          case 'text':\n            data[c.id] = inputs[c.id].stringValue();\n            break;\n          case 'select':\n            data[c.id] = c.options[inputs[c.id].indexOfSelectedItem()];\n            break;\n          case 'checkbox':\n            data[c.id] = (inputs[c.id].state() === 1);\n            break;\n\n          case 'multicheckbox':\n            let values = {};\n\n            c.values.forEach((v, i) => {\n              values[v] = ( inputs[c.id][i].state() === 1 );\n            });\n\n            data[c.id] = values;\n        }\n      });\n\n      cb(data);\n      return;\n    }\n\n    return dialog;\n  }\n};\n\nexport default ui;"],"sourceRoot":""}