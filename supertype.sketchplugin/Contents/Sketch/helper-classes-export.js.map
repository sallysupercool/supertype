{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/export/export-components.js","webpack://exports/./src/export/open-export-dialog.js","webpack://exports/./src/helper-classes-export.js","webpack://exports/./src/util/export.js","webpack://exports/./src/util/number.js","webpack://exports/./src/util/sketch.js","webpack://exports/./src/util/ui.js","webpack://exports/./src/util/util.js"],"names":["type","id","label","values","value","options","context","opts","cb","ui","createSettingsDialog","exportComponents","data","propertyNamingConvention","cssUnit","excludeProps","push","excludeWords","length","wordString","wordArray","split","textStyles","sketchUtils","getTextStyles","exportUtils","sortTextStyles","excludeTextStyleProperties","stripSketchWords","removeDoubleTextStyles","openExportDialog","title","informativeText","confirmBtnText","output","createCombinedClassNames","createSavePanel","sort","a","b","name","mixinName","replace","stripMedias","deDupe","cleanedNames","unique","Set","excludedProps","forEach","textStyle","prop","createFinalStylesList","i","cleanedName","createCssProps","scalingFactor","maxDecimalPlaces","cssProps","fontFamily","fontParts","fontWeightMap","numberUtils","parseFloatMaxDecimal","fontSize","letterSpacing","textTransform","lineHeight","color","createRgbaString","colorObj","createColorValue","r","g","normalizedValue","Math","round","createStyleBlock","createMegaMixin","finalTextStyleName","lastIndexOf","insert","str","index","substr","phone","tablet","desktop","createClasses","createCombinedStyles","finalList","createPatternlab","number","Number","toFixed","sketch","texts","document","documentData","layerTextStyles","objects","rawTextStyles","text","attributes","style","rawTextStyle","String","NSFont","fontDescriptor","objectForKey","NSFontNameAttribute","NSFontSizeAttribute","paragraph","NSParagraphStyle","maximumLineHeight","MSAttributedStringColorAttribute","red","green","blue","alpha","NSKern","parseInt","MSAttributedStringTextTransformAttribute","defaultFileName","contents","save","NSSavePanel","savePanel","setNameFieldStringValue","setAllowsOtherFileTypes","setExtensionHidden","runModal","file","NSString","stringWithString","path","URL","writeToFile_atomically_encoding_error","NSUTF8StringEncoding","createLabel","NSTextField","alloc","init","setStringValue","setFont","boldSystemFontOfSize","setBezeled","setDrawsBackground","setEditable","setSelectable","createTextField","field","createSelect","comboBox","NSPopUpButton","addItemsWithTitles","selectItemAtIndex","createStepper","stepper","NSStepper","createCheckbox","checkbox","NSButton","setButtonType","NSSwitchButton","components","cancelBtnText","dialog","NSAlert","dialogIconPath","plugin","urlForResourceNamed","dialogIcon","NSImage","initByReferencingFile","setIcon","setMessageText","setInformativeText","btnConfirm","addButtonWithTitle","btnCancel","gridView","NSGridView","inputs","height","rowSpacing","c","addRowWithViews","v","accessoryView","columnSpacing","frame","NSMakeRect","responseCode","stringValue","indexOfSelectedItem","state","util","createTextStyleId","textStyleId"],"mappings":"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","file":"helper-classes-export.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/helper-classes-export.js\");\n","export default [\n  \n  {\n    type: 'multicheckbox',\n    id: 'excludeProps',\n    label: 'Exclude properties',\n    values: [\n      'Color',\n      'Letter spacing', \n      'Text transform' // swap for our removes\n    ]\n  },\n    {\n    type: 'text',\n    id: 'maxDecimalPlaces',\n    value: 6, // increased to 6 for accuracy\n    label: 'Maximal decimal places'\n  },\n  {\n    type: 'checkbox',\n    id: 'export New Site Pack',\n    label: 'Export all',\n    values: 0\n  },\n  {\n    type: 'select', //TODO: remove as we do this in PostCSS\n    id: 'cssUnit',\n    options: [\n      'px',\n      'em',\n      'rem',\n      '%',\n      'vh',\n      'vw',\n      'No unit'\n    ],\n    label: 'CSS unit'\n  },\n  {\n    type: 'text', //TODO remove as this is not rel for us\n    id: 'scalingFactor',\n    value: 1,\n    label: 'Size scaling factor'\n  },\n  {\n    type: 'text',\n    id: 'namingPrefix',\n    value: 'text-', // changed to our prefix\n    label: 'Naming prefix'\n  },\n  {\n    type: 'select',\n    id: 'namingConvention',\n    options: [\n      'Text style name', // prefer our convention\n      'Numeric'\n    ],\n    label: 'Naming convention'\n  }\n];","import ui from '../util/ui';\nimport exportUtils from '../util/export';\nimport sketchUtils from '../util/sketch';\n\nimport exportComponents from './export-components';\n\nexport default function(context, opts, cb) {\n\n  ui.createSettingsDialog(context, opts, exportComponents, (data) => {\n\n    // Defaults\n    data.propertyNamingConvention = data.propertyNamingConvention || 'Numeric';\n    data.cssUnit = (data.cssUnit === 'No unit' ? 0 : data.cssUnit);\n\n    // First store the properties we should exclude\n    let excludeProps = [];\n    if (data['excludeProps']['Color']) {\n      excludeProps.push('color');\n    }\n    if (data['excludeProps']['Letter Spacing']) {\n      excludeProps.push('letterSpacing');\n    }\n    if (data['excludeProps']['Text Transform']) {\n      excludeProps.push('textTransform');\n    }\n\n    // Next store the words we should strip out from the text style names !not yet hooked up\n    let excludeWords = []\n    \n    if(data.excludeWords|length) {\n      let wordString = data.excludeWords;\n      wordArray = excludeWords.split(\",\");\n      excludeWords.push(wordArray);\n    }\n\n    // Get the text styles from the Sketch document\n    let textStyles = sketchUtils.getTextStyles(context);\n    textStyles = exportUtils.sortTextStyles(textStyles);\n    textStyles = exportUtils.excludeTextStyleProperties(textStyles, excludeProps);\n    textStyles = exportUtils.stripSketchWords(textStyles, excludeWords);\n\n    if (data['merge']) {\n      textStyles = exportUtils.removeDoubleTextStyles(textStyles);\n    }\n\n    cb(textStyles, data);\n  });\n};","import ui from './util/ui';\nimport exportUtils from './util/export';\nimport openExportDialog from \"./export/open-export-dialog\";\n\nexport default function(context) {\n\n  openExportDialog(context, {\n    title: 'Create Helper Classes',\n    informativeText: 'Add to Helpers folder',\n    confirmBtnText: 'Export SCSS'\n  }, (textStyles, data) => {\n\n    // Create mega mixins and save out\n    let output = exportUtils.createCombinedClassNames(textStyles, data);\n\n    // Ask the user to save the file\n    ui.createSavePanel('_automated-typestyles.scss', output);\n  });\n};","\"use strict\";\n\nimport util from './util';\nimport numberUtils from './number';\n\nconst exportUtils = {\n  sortTextStyles(textStyles) {\n\n    // Sort text styles by name\n    textStyles.sort((a, b) => {\n      return a.name - b.name;\n    });\n\n    return textStyles;\n  },\n   // strip Sketch parts from name ADD IN ANY MORE HERE-- TODO make this a UI\n  stripSketchWords(mixinName) {\n        mixinName = mixinName.replace(/-left|-right|-centre|-light-grey|-black|-white|-series|-event|-brand|-variable/g, '');\n        return mixinName;\n                \n  },\n  // clean off media names, not for sass mixins export, only for other options!\n  stripMedias(mixinName) {\n    mixinName = mixinName.replace(/-desktop|-mobile|-tablet/g, '');\n    return mixinName;\n  },\n  // deduper for cleaned names only\n  deDupe(cleanedNames) {\n    let unique = [...new Set(cleanedNames)];\n    return unique;\n  }, \n  excludeTextStyleProperties(textStyles, excludedProps = []) {\n\n    textStyles.forEach(textStyle => {\n      excludedProps.forEach(prop => {\n        if (textStyle[prop]) {\n          delete textStyle[prop];\n        }\n      });\n    });\n\n    return textStyles;\n  },\n  //start creating things!\n     // make a list of final text styles to drive creation of classes and mega mixins\n  createFinalStylesList(textStyles) {\n    //clean random names\n    let cleanedNames = []\n\n    // get the name out of the text style and run through any cleaning here -- have written it all out so it's easier to add to later\n\n    textStyles.forEach((textStyle, i) => {\n      let cleanedName = textStyle.name;\n      cleanedName = stripSketchWords(textStyle.name);\n      cleanedName = stripMedias(textStyle.name);\n      cleanedNames = cleanedNames + cleanedName;\n    });\n\n    cleanedNames = deDupe(cleanedNames);\n\n    return cleanedNames;    \n  },\n  createCssProps(textStyle, opts = {}) {\n\n    opts.cssUnit = opts.cssUnit || 0;\n    opts.scalingFactor = opts.scalingFactor || 1;\n    opts.maxDecimalPlaces = opts.maxDecimalPlaces || 2;\n\n    let cssProps = {};\n\n    cssProps['font-family'] = textStyle.fontFamily;\n    cssProps['font-weight'] = 400;\n    cssProps['text-transform'] = 'none';\n\n    let fontParts = textStyle.fontFamily.split('-');\n\n    let fontWeightMap = {\n      'Thin': 100,\n      'Light': 300,\n      'Regular': 400,\n      'Medium': 500,\n      'Bold': 700,\n      'Black': 900\n    };\n\n    if (fontParts[1] && fontWeightMap[fontParts[1]]) {\n      cssProps['font-family'] = fontParts[0];\n      cssProps['font-weight'] = fontWeightMap[fontParts[1]];\n    }\n\n    cssProps['font-size'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.fontSize, opts.maxDecimalPlaces)+opts.cssUnit;\n    cssProps['letter-spacing'] = numberUtils.parseFloatMaxDecimal(opts.scalingFactor * textStyle.letterSpacing, opts.maxDecimalPlaces)+opts.cssUnit;\n\n    if (textStyle.textTransform === 1) {\n      cssProps['text-transform'] = 'uppercase';\n    }\n\n    if (textStyle.textTransform === 2) {\n      cssProps['text-transform'] = 'lowercase';\n    }\n// modified this line height calculator as it was outputting wrong sizes\n    if (textStyle.lineHeight) {\n      cssProps['line-height'] = numberUtils.parseFloatMaxDecimal(textStyle.lineHeight / textStyle.fontSize, opts.maxDecimalPlaces);\n    }\n\n    if (textStyle.color) {\n      cssProps['color'] = exportUtils.createRgbaString(textStyle.color);\n    }\n\n    return cssProps;\n  },\n  createRgbaString(colorObj) {\n    return 'rgba('+exportUtils.createColorValue(colorObj.r)+', '+exportUtils.createColorValue(colorObj.g)+', '+exportUtils.createColorValue(colorObj.b)+', '+colorObj.a+')';\n  },\n  createColorValue(normalizedValue) {\n    return Math.round(normalizedValue * 255);\n  },\n  createStyleBlock(cssProps) {\n\n    let output = '';\n\n    for (let prop in cssProps) {\n      output += \"\\t\"+prop+': '+cssProps[prop]+';'+\"\\n\";\n    }\n\n    return output;\n  },\n  //combine all the initial mixins into something useful with media queries. As indicated please only provide final and deduped text style names as input \n  createMegaMixin(finalTextStyleName) {\n    // swap in the screen size as second to last name\n    let i = finalTextStyleName.lastIndexOf('-');\n    function insert(str, index, value) {\n        return str.substr(0, index) + value + str.substr(index);\n    }\n    let phone = insert(finalTextStyleName, i, '-mobile');\n    let tablet = insert(finalTextStyleName, i, '-tablet');\n    let desktop = insert(finalTextStyleName, i, '-desktop');\n\n    return `@mixin ${finalTextStyleName} { \n    @include media($tablet) { @include ${tablet} }\n    @include media($tablet--gt) { @include ${desktop} }\n    @include media($phone) { @include ${phone} }   \n    } `\n    \n  },\n  createClasses(finalTextStyleName) {\n    return `.h-${finalTextStyleName} { @include ${finalTextStyleName} }`\n    \n  },\n  createCombinedStyles(textStyles) {\n    let output = ` `;\n    //get cleaned list of styles\n    finalList = createFinalStylesList(textStyles);\n\n    finalList.forEach((finalTextStyleName) => {\n\n      output += `${createMegaMixin(finalTextStyleName)}`;\n\n    });\n    return output;\n  },\n  createCombinedClassNames(textStyles) {\n    let output = ` `;\n    //get cleaned list of styles\n    finalList = createFinalStylesList(textStyles);\n\n    finalList.forEach((finalTextStyleName) => {\n\n      output += `${createMegaMixin(finalTextStyleName)}`;\n\n    });\n\n    return output;\n\n  },\n  createPatternlab(textStyles) {\n\n    let output = `\n      <article class=\"o-grid o-container\">\n      <h3 class=\"h-text---styleguide-styleguide-title\">Automated Export, style only</h3>\n    `;\n\n    textStyles = createFinalStylesList(textStyles);\n\n    textStyles.forEach((textStyle) => {\n\n      output += `\n        <dt class=\"h-text---styleguide-styleguide-title\">\n            <span>${i+1}.</span>\n            <span>\n              ${textStyle}\n            </span>\n          </dt>\n          <dd>\n            <div class=\"h-${textStyle}\" contenteditable=\"true\">\n              The quick brown fox jumps over the lazy dog\n            </div>\n            \n          </dd>\n      `;\n    });\n\n    output += `\n    </dl>\n    </article>\n\n\n    `;\n\n    return output;\n  }\n};\n\nexport default exportUtils;","\"use strict\";\n\nconst number = {\n  parseFloatMaxDecimal(number, maxDecimalPlaces) {\n    return Number(number.toFixed(maxDecimalPlaces).replace(/[.,]00$/, ''));\n  }\n};\n\nexport default number;","\"use strict\";\n\nconst sketch = {\n  getTextStyles(context) {\n\n    let texts = context.document.documentData().layerTextStyles().objects();\n    let rawTextStyles = [];\n\n    texts.forEach((text, i) => {\n\n      rawTextStyles.push({\n        attributes: text.style().textStyle().attributes(),\n        textStyle: text,\n        name: text.name()\n      });\n    });\n\n    let textStyles = [];\n\n    rawTextStyles.forEach(rawTextStyle => {\n\n      let textStyle = {};\n\n      textStyle.name = rawTextStyle.name;\n      textStyle.fontFamily = String(rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontNameAttribute));\n      textStyle.fontSize = rawTextStyle.attributes.NSFont.fontDescriptor().objectForKey(NSFontSizeAttribute);\n      textStyle.paragraph = rawTextStyle.attributes.NSParagraphStyle;\n\n      if (textStyle.paragraph) {\n        textStyle.lineHeight = textStyle.paragraph.maximumLineHeight();\n      }\n\n      let color = rawTextStyle.attributes.MSAttributedStringColorAttribute;\n\n      if (color) {\n        let r = color.red();\n        let g = color.green();\n        let b = color.blue();\n        let a = color.alpha();\n\n        textStyle.color = {\n          r: r,\n          g: g,\n          b: b,\n          a: a\n        };\n      }\n\n      textStyle.letterSpacing = rawTextStyle.attributes.NSKern || 0;\n      textStyle.textTransform = parseInt(rawTextStyle.attributes.MSAttributedStringTextTransformAttribute || 0);\n\n      // @TODO strikethrough & underline, or is this not needed?\n\n      textStyles.push(textStyle);\n    });\n\n    return textStyles;\n  }\n};\n\nexport default sketch;","\"use strict\";\n\nconst ui = {\n  createSavePanel(defaultFileName, contents) {\n\n    let save = NSSavePanel.savePanel();\n\n    save.setNameFieldStringValue(defaultFileName);\n    save.setAllowsOtherFileTypes(false);\n    save.setExtensionHidden(false);\n\n    if (save.runModal()) {\n\n      let file = NSString.stringWithString(contents);\n      let path = save.URL().path();\n\n      file.writeToFile_atomically_encoding_error(path, true, NSUTF8StringEncoding, null);\n    }\n  },\n  createLabel: (text = '') => {\n\n    let label = NSTextField.alloc().init();\n\n    label.setStringValue(text);\n    label.setFont(NSFont.boldSystemFontOfSize(12));\n    label.setBezeled(false);\n    label.setDrawsBackground(false);\n    label.setEditable(false);\n    label.setSelectable(false);\n\n    return label;\n  },\n  createTextField(value) {\n\n    let field = NSTextField.alloc().init();\n\n    field.setStringValue(value);\n\n    return field;\n  },\n  createSelect: (options) => {\n\n    let comboBox = NSPopUpButton.alloc().init();\n\n    comboBox.addItemsWithTitles(options);\n    comboBox.selectItemAtIndex(0);\n\n    return comboBox;\n  },\n  createStepper: (value) => {\n\n    let stepper = NSStepper.alloc().init();\n    return stepper;\n  },\n  createCheckbox: (title) => {\n\n    let checkbox = NSButton.alloc().init();\n    checkbox.setButtonType(NSSwitchButton);\n    checkbox.title = title;\n    return checkbox;\n  },\n  createSettingsDialog(context, opts = {}, components, cb) {\n\n    opts.title = opts.title || 'Alert';\n    opts.informativeText = opts.informativeText || '';\n    opts.cancelBtnText = opts.cancelBtnText || 'Cancel';\n    opts.confirmBtnText = opts.confirmBtnText || 'Ok';\n\n    let dialog = NSAlert.alloc().init();\n    let dialogIconPath = context.plugin.urlForResourceNamed('icon.png').path();\n    let dialogIcon = NSImage.alloc().initByReferencingFile(dialogIconPath);\n\n    dialog.setIcon(dialogIcon);\n    dialog.setMessageText(opts.title);\n    dialog.setInformativeText(opts.informativeText);\n\n    let btnConfirm = dialog.addButtonWithTitle(opts.confirmBtnText);\n    let btnCancel = dialog.addButtonWithTitle(opts.cancelBtnText);\n\n    // Create grid view\n    let gridView = NSGridView.alloc().init();\n\n    // Create object to hold all inputs\n    let inputs = {};\n    let height = 0;\n\n    let rowSpacing = 8;\n\n    // Loop each component\n    components.forEach(c => {\n\n      let label, field;\n\n      switch (c.type) {\n\n        case 'text':\n\n          label = ui.createLabel(c.label);\n          field = ui.createTextField(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'stepper':\n\n          label = ui.createLabel(c.label);\n          field = ui.createStepper(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'checkbox':\n\n          label = ui.createLabel(c.label);\n          field = ui.createCheckbox(c.value);\n          height += 22 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n\n        case 'multicheckbox':\n\n          field = [];\n\n          c.values.forEach((v, i) => {\n\n            label = (i ? ui.createLabel() : ui.createLabel(c.label));\n\n            let checkbox = ui.createCheckbox(v);\n            height += 22 + rowSpacing;\n\n            field.push(checkbox);\n            gridView.addRowWithViews([label, checkbox]);\n          });\n\n          break;\n\n        case 'select':\n\n          label = ui.createLabel(c.label);\n          field = ui.createSelect(c.options);\n          height += 28 + rowSpacing;\n          gridView.addRowWithViews([label, field]);\n\n          break;\n      }\n\n      inputs[c.id] = field;\n    });\n\n    // Set grid view as view of dialog\n    dialog.accessoryView = gridView;\n\n    gridView.columnSpacing = 30;\n    gridView.rowSpacing = rowSpacing;\n    gridView.frame = NSMakeRect(0, 0, 400, height);\n\n    // Open the dialog and store the response code\n    let responseCode = dialog.runModal();\n\n    // The dialog is being 'submitted'\n    if (responseCode === 1000) {\n\n      let data = {};\n\n      components.forEach(c => {\n\n        switch (c.type) {\n          case 'text':\n            data[c.id] = inputs[c.id].stringValue();\n            break;\n          case 'select':\n            data[c.id] = c.options[inputs[c.id].indexOfSelectedItem()];\n            break;\n          case 'checkbox':\n            data[c.id] = (inputs[c.id].state() === 1);\n            break;\n\n          case 'multicheckbox':\n            let values = {};\n\n            c.values.forEach((v, i) => {\n              values[v] = ( inputs[c.id][i].state() === 1 );\n            });\n\n            data[c.id] = values;\n        }\n      });\n\n      cb(data);\n      return;\n    }\n\n    return dialog;\n  }\n};\n\nexport default ui;","\"use strict\";\n\nconst util = {\n  createTextStyleId(textStyle) {\n\n    let textStyleId = '';\n\n    // Make sure this id incorporates every possible property of the text style\n\n    textStyleId += textStyle.fontFamily;\n    textStyleId += '-'+textStyle.fontSize;\n    if (textStyle.letterSpacing) {\n      textStyleId += '-'+textStyle.letterSpacing;\n    }\n\n    if (textStyle.textTransform) {\n      textStyleId += '-'+textStyle.textTransform;\n    }\n\n    if (textStyle.lineHeight) {\n      textStyleId += '-'+textStyle.lineHeight;\n    }\n\n    if (textStyle.color) {\n      textStyleId += '-'+textStyle.color.r+'-'+textStyle.color.g+'-'+textStyle.color.b+'-'+textStyle.color.a;\n    }\n\n    return textStyleId;\n  }\n};\n\nexport default util;"],"sourceRoot":""}